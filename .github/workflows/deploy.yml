# AWS로 배포하는 CI/CD
name: Deploy to AWS

# 코드가 main 브랜치에 푸시될 때 이 Workflow가 실행됨
on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: backend-portfolio

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions가 실행될 환경 (Ubuntu 최신 버전)
    
    steps:
    - uses: actions/checkout@v2 # 현재 저장소의 코드를 가져옴

    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17' # JDK 17을 사용
        distribution: 'adopt' # AdoptOpenJDK 배포판 사용
    
    - name: Build with Gradle
      run: ./gradlew build # Gradle을 사용하여 프로젝트 빌드
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # GitHub Secrets에 저장된 AWS 액세스 키 사용
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub Secrets에 저장된 AWS 시크릿 키 사용
        aws-region: ${{ env.AWS_REGION }} # AWS 리전 설정
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1 # AWS ECR에 로그인
    
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # AWS ECR 레지스트리 주소
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
    
    - name: Deploy to EC2 using SSM
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy portfolio app" \
          --parameters "commands=[
            'docker stop portfolio-app || true',
            'docker rm portfolio-app || true',
            'aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}',
            'docker run -d --name portfolio-app -p 8080:8080 \
              -e JAVA_OPTS=-Xmx256m \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.RDS_ENDPOINT }}/portfolio?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.RDS_PASSWORD }} \
              ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${GITHUB_SHA}'
          ]"
